#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: Monitor 2.0
basePath: /api
paths:
  /rest/MonCntPrj/{row_id}:
    post:
      summary: Create a new MonCntPrj business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncntprj-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonCntPrj'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonCntPrj'
        in: body
        name: body
      tags:
      - MonCntPrj
      consumes:
      - application/json
    get:
      summary: Get a MonCntPrj business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncntprj-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonCntPrj'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonCntPrj
    delete:
      summary: Delete a MonCntPrj business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncntprj-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonCntPrj
    put:
      summary: Update a MonCntPrj business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncntprj-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonCntPrj'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonCntPrj'
        in: body
        name: body
      tags:
      - MonCntPrj
      consumes:
      - application/json
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      produces:
      - text/plain
      - application/json
      operationId: login
      responses:
        '200':
          description: Successful login
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: _output
        description: Optional output format
        type: string
        required: false
        enum:
        - json
        - oauth2
        - token
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: logout
      responses:
        '200':
          description: Successfull logout
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      tags:
      - session
  /rest/MonProjectInstance/{row_id}/action:callInstance:
    get:
      summary: Call a custom action for a MonProjectInstance business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-action-callinstance
      responses:
        '200':
          schema:
            $ref: '#/definitions/ActionResult'
          description: Success in calling the custom action
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonProjectInstance
  /rest/MonContact:
    get:
      summary: Search MonContact business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncontact-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonContact'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monCntEmail
        description: Search filter for Email
        type: string
        required: false
      tags:
      - MonContact
  /rest/MonInstance/{row_id}:
    post:
      summary: Create a new MonInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moninstance-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonInstance'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonInstance'
        in: body
        name: body
      tags:
      - MonInstance
      consumes:
      - application/json
    get:
      summary: Get a MonInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moninstance-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonInstance'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonInstance
    delete:
      summary: Delete a MonInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moninstance-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonInstance
    put:
      summary: Update a MonInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moninstance-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonInstance'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonInstance'
        in: body
        name: body
      tags:
      - MonInstance
      consumes:
      - application/json
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: texts
        description: Texts?
        type: boolean
        required: false
      tags:
      - session
  /rest/MonHealth/{row_id}:
    post:
      summary: Create a new MonHealth business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monhealth-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonHealth'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonHealth'
        in: body
        name: body
      tags:
      - MonHealth
      consumes:
      - application/json
    get:
      summary: Get a MonHealth business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monhealth-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonHealth'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonHealth
    delete:
      summary: Delete a MonHealth business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monhealth-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonHealth
    put:
      summary: Update a MonHealth business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monhealth-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonHealth'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonHealth'
        in: body
        name: body
      tags:
      - MonHealth
      consumes:
      - application/json
  /rest/MonProjectInstance/{row_id}:
    post:
      summary: Create a new MonProjectInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProjectInstance'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonProjectInstance'
        in: body
        name: body
      tags:
      - MonProjectInstance
      consumes:
      - application/json
    get:
      summary: Get a MonProjectInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProjectInstance'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonProjectInstance
    delete:
      summary: Delete a MonProjectInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonProjectInstance
    put:
      summary: Update a MonProjectInstance business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProjectInstance'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonProjectInstance'
        in: body
        name: body
      tags:
      - MonProjectInstance
      consumes:
      - application/json
  /rest/MonProjectInstance/{row_id}/action:callInstances:
    get:
      summary: Call a custom action for a MonProjectInstance business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-action-callinstances
      responses:
        '200':
          schema:
            $ref: '#/definitions/ActionResult'
          description: Success in calling the custom action
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonProjectInstance
  /rest/MonContact/{row_id}:
    post:
      summary: Create a new MonContact business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncontact-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonContact'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonContact'
        in: body
        name: body
      tags:
      - MonContact
      consumes:
      - application/json
    get:
      summary: Get a MonContact business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncontact-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonContact'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonContact
    delete:
      summary: Delete a MonContact business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncontact-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonContact
    put:
      summary: Update a MonContact business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncontact-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonContact'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonContact'
        in: body
        name: body
      tags:
      - MonContact
      consumes:
      - application/json
  /rest/MonInstance:
    get:
      summary: Search MonInstance business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moninstance-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonInstance'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monInstUrl
        description: Search filter for URL
        type: string
        required: false
      - in: query
        name: monInstPollFreq
        description: Search filter for Polling frequency (min)
        type: integer
        required: false
      tags:
      - MonInstance
  /rest/MonCntPrj:
    get:
      summary: Search MonCntPrj business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-moncntprj-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonCntPrj'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monCntprjCntId
        description: Search filter for mon cntprj cnt id
        type: string
        required: false
      - in: query
        name: monCntprjCntId__monCntEmail
        description: Search filter for mon cntprj cnt id Email
        type: string
        required: false
      - in: query
        name: monCntprjPrjId
        description: Search filter for mon cntprj prj id
        type: string
        required: false
      - in: query
        name: monCntprjPrjId__monPrjName
        description: Search filter for mon cntprj prj id Name
        type: string
        required: false
      tags:
      - MonCntPrj
  /rest/MonHealth:
    get:
      summary: Search MonHealth business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monhealth-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonHealth'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monHeaInstId
        description: Search filter for Instance
        type: string
        required: false
      - in: query
        name: monHeaInstId__monInstUrl
        description: Search filter for Instance URL
        type: string
        required: false
      - in: query
        name: monHeaDate
        description: Search filter for Date
        type: string
        required: false
      - in: query
        name: monHeaStatus
        description: Search filter for Status
        type: string
        required: false
        enum:
        - OK
        - KO
      - in: query
        name: monHeaVersion
        description: Search filter for Platform Version
        type: string
        required: false
      - in: query
        name: monHeaBuiltOn
        description: Search filter for Built On
        type: string
        required: false
      - in: query
        name: monHeaDatabasePatchLevel
        description: Search filter for Database Patch Level
        type: string
        required: false
      - in: query
        name: monHeaAppVersion
        description: Search filter for App Version
        type: string
        required: false
      - in: query
        name: monHeaSessions
        description: Search filter for Sessions
        type: integer
        required: false
      - in: query
        name: monHeaEnabledUsers
        description: Search filter for Enabled Users
        type: integer
        required: false
      - in: query
        name: monHeaTotalUsers
        description: Search filter for Total Users
        type: integer
        required: false
      - in: query
        name: monHeaFreeHeap
        description: Search filter for Free Heap
        type: integer
        required: false
      - in: query
        name: monHeaHeapSize
        description: Search filter for Heap Size
        type: integer
        required: false
      - in: query
        name: monHeaMaxHeapSize
        description: Search filter for Max Heap Size
        type: integer
        required: false
      - in: query
        name: monHeaTotalFreeSize
        description: Search filter for Total Free Size
        type: integer
        required: false
      - in: query
        name: monHeaHeapUsage
        description: Search filter for Heap Usage
        type: number
        required: false
      - in: query
        name: monHeaGrantCache
        description: Search filter for Grant Cache
        type: integer
        required: false
      - in: query
        name: monHeaObjectCache
        description: Search filter for Object Cache
        type: integer
        required: false
      - in: query
        name: monHeaMaxObjectCache
        description: Search filter for Max Object Cache
        type: integer
        required: false
      - in: query
        name: monHeaObjectCacheRatio
        description: Search filter for Object Cache Usage
        type: number
        required: false
      - in: query
        name: monHeaObjects
        description: Search filter for Objects
        type: integer
        required: false
      - in: query
        name: monHeaAttributes
        description: Search filter for Attributes
        type: integer
        required: false
      - in: query
        name: monHeaFunctions
        description: Search filter for Functions
        type: integer
        required: false
      - in: query
        name: monHeaGroups
        description: Search filter for Groups
        type: integer
        required: false
      - in: query
        name: monHeaStates
        description: Search filter for States
        type: integer
        required: false
      - in: query
        name: monHeaConstraints
        description: Search filter for Constraints
        type: integer
        required: false
      - in: query
        name: monHeaCrosstables
        description: Search filter for Crosstables
        type: integer
        required: false
      - in: query
        name: monHeaTemplates
        description: Search filter for Templates
        type: integer
        required: false
      - in: query
        name: monHeaScripts
        description: Search filter for Scripts
        type: integer
        required: false
      - in: query
        name: monHeaActions
        description: Search filter for Actions
        type: integer
        required: false
      - in: query
        name: monHeaPublications
        description: Search filter for Publications
        type: integer
        required: false
      - in: query
        name: monHeaLastLogin
        description: Search filter for Last login
        type: string
        required: false
      - in: query
        name: monHeaActiveUsers
        description: Search filter for Active Users
        type: integer
        required: false
      - in: query
        name: monHeaInactiveUsers
        description: Search filter for Inactive Users
        type: integer
        required: false
      - in: query
        name: monHeaPendingUsers
        description: Search filter for Pending Users
        type: integer
        required: false
      - in: query
        name: monHeaWebserviceUsers
        description: Search filter for Webservice Users
        type: integer
        required: false
      tags:
      - MonHealth
  /rest/MonProject:
    get:
      summary: Search MonProject business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monproject-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonProject'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monPrjName
        description: Search filter for Name
        type: string
        required: false
      tags:
      - MonProject
  /rest/MonProjectInstance:
    get:
      summary: Search MonProjectInstance business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monprojectinstance-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfMonProjectInstance'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: monInstUrl
        description: Search filter for URL
        type: string
        required: false
      - in: query
        name: monInstPollFreq
        description: Search filter for Polling frequency (min)
        type: integer
        required: false
      - in: query
        name: monInstPrjId
        description: Search filter for Project
        type: string
        required: false
      - in: query
        name: monInstPrjId__monPrjName
        description: Search filter for Project Name
        type: string
        required: false
      tags:
      - MonProjectInstance
  /rest/MonProject/{row_id}:
    post:
      summary: Create a new MonProject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monproject-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProject'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonProject'
        in: body
        name: body
      tags:
      - MonProject
      consumes:
      - application/json
    get:
      summary: Get a MonProject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monproject-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProject'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - MonProject
    delete:
      summary: Delete a MonProject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monproject-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - MonProject
    put:
      summary: Update a MonProject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-monproject-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/MonProject'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/MonProject'
        in: body
        name: body
      tags:
      - MonProject
      consumes:
      - application/json
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Error404:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 404
  MonContact:
    type: object
    properties:
      monCntEmail:
        description: Email
        type: string
      row_id:
        description: Unique technical row ID
        type: string
  MonProject:
    type: object
    properties:
      row_id:
        description: Unique technical row ID
        type: string
      monPrjName:
        description: Name
        type: string
  ArrayOfMonProjectInstance:
    type: array
    items:
      $ref: '#/definitions/MonProjectInstance'
  ArrayOfMonCntPrj:
    type: array
    items:
      $ref: '#/definitions/MonCntPrj'
  PublicationResult:
    type: object
    properties:
      mime:
        description: MIME type
        type: string
      content:
        description: Content (plain text or base64 encoded)
        type: string
  PlaceData:
    type: object
    properties:
      coord:
        description: Geographical coordinates
        type: string
      address:
        description: Address
        type: string
      row_id:
        description: Row ID
        type: string
      label1:
        description: 'Label #1'
        type: string
      label2:
        description: 'Label #2'
        type: string
      label3:
        description: 'Label #3'
        type: string
  ArrayOfMonContact:
    type: array
    items:
      $ref: '#/definitions/MonContact'
  ArrayOfMonHealth:
    type: array
    items:
      $ref: '#/definitions/MonHealth'
  PlaceMapData:
    type: object
    properties:
      places:
        description: Places
        type: array
        items:
          $ref: '#/definitions/PlaceData'
      name:
        description: Name
        type: string
  ActionResult:
    type: object
    properties:
      result:
        description: Action result
        type: string
  MonCntPrj:
    type: object
    properties:
      monCntprjPrjId__monPrjName:
        description: mon cntprj prj id Name
        type: string
      monCntprjCntId:
        description: mon cntprj cnt id
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      monCntprjCntId__monCntEmail:
        description: mon cntprj cnt id Email
        type: string
      monCntprjPrjId:
        description: mon cntprj prj id
        type: string
  TreeviewData:
    type: object
    properties:
      item:
        description: Object item with lists of linked objects' items
        type: object
  MonHealth:
    type: object
    properties:
      monHeaTotalUsers:
        description: Total Users
        type: integer
      monHeaInactiveUsers:
        description: Inactive Users
        type: integer
      monHeaFreeHeap:
        description: Free Heap
        type: integer
      monHeaActions:
        description: Actions
        type: integer
      monHeaActiveUsers:
        description: Active Users
        type: integer
      monHeaAppVersion:
        description: App Version
        type: string
      monHeaObjects:
        description: Objects
        type: integer
      monHeaStatus:
        description: Status
        type: string
        enum:
        - OK
        - KO
      monHeaHeapSize:
        description: Heap Size
        type: integer
      monHeaScripts:
        description: Scripts
        type: integer
      monHeaBuiltOn:
        description: Built On
        type: string
      monHeaObjectCacheRatio:
        description: Object Cache Usage
        type: number
      monHeaTotalFreeSize:
        description: Total Free Size
        type: integer
      monHeaWebserviceUsers:
        description: Webservice Users
        type: integer
      monHeaFunctions:
        description: Functions
        type: integer
      monHeaStates:
        description: States
        type: integer
      monHeaVersion:
        description: Platform Version
        type: string
      monHeaGroups:
        description: Groups
        type: integer
      monHeaInstId__monInstUrl:
        description: Instance URL
        type: string
      monHeaConstraints:
        description: Constraints
        type: integer
      monHeaHeapUsage:
        description: Heap Usage
        type: number
      monHeaDate:
        description: Date
        type: string
        example: yyyy-MM-dd HH:mm:ss
      monHeaEnabledUsers:
        description: Enabled Users
        type: integer
      monHeaDatabasePatchLevel:
        description: Database Patch Level
        type: string
      monHeaPendingUsers:
        description: Pending Users
        type: integer
      monHeaAttributes:
        description: Attributes
        type: integer
      monHeaPublications:
        description: Publications
        type: integer
      monHeaCrosstables:
        description: Crosstables
        type: integer
      monHeaSessions:
        description: Sessions
        type: integer
      monHeaMaxObjectCache:
        description: Max Object Cache
        type: integer
      monHeaGrantCache:
        description: Grant Cache
        type: integer
      monHeaMaxHeapSize:
        description: Max Heap Size
        type: integer
      monHeaLastLogin:
        description: Last login
        type: string
        example: yyyy-MM-dd HH:mm:ss
      monHeaTemplates:
        description: Templates
        type: integer
      monHeaObjectCache:
        description: Object Cache
        type: integer
      monHeaInstId:
        description: Instance
        type: string
      row_id:
        description: Unique technical row ID
        type: string
  MonInstance:
    type: object
    properties:
      monInstUrl:
        description: URL
        type: string
      monInstPollFreq:
        description: Polling frequency (min)
        type: integer
      row_id:
        description: Unique technical row ID
        type: string
  Error400:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 400
  ArrayOfMonInstance:
    type: array
    items:
      $ref: '#/definitions/MonInstance'
  ArrayOfMonProject:
    type: array
    items:
      $ref: '#/definitions/MonProject'
  Error401:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 401
  Error500:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 500
  Error403:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 403
  MonProjectInstance:
    type: object
    properties:
      monInstUrl:
        description: URL
        type: string
      monInstPollFreq:
        description: Polling frequency (min)
        type: integer
      monInstPrjId:
        description: Project
        type: string
      monInstPrjId__monPrjName:
        description: Project Name
        type: string
      row_id:
        description: Unique technical row ID
        type: string
swagger: '2.0'
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module Monitor
  title: Monitor
  version: '2.0'
tags:
- name: MonCntPrj
  description: To contact in case of problem
- name: MonContact
  description: Manager
- name: MonHealth
  description: Health
- name: MonInstance
  description: Instance
- name: MonProject
  description: Project
- name: MonProjectInstance
  description: Instance
